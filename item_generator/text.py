from enum import Enum
import numpy as np
import matplotlib.pyplot as plt

one = np.array([
    [0, 1, 0, 0],
    [1, 1, 2, 0],
    [0, 1, 2, 0],
    [0, 1, 2, 0],
    [0, 1, 2, 0],
    [0, 1, 2, 0],
    [0, 1, 2, 0],
    [1, 1, 1, 0],
    [0, 2, 2, 2],
])

two = np.array([
    [0, 1, 1, 1, 0, 0],
    [1, 0, 2, 2, 1, 0],
    [0, 2, 0, 0, 1, 2],
    [0, 0, 0, 1, 0, 2],
    [0, 0, 1, 0, 2, 0],
    [0, 1, 0, 2, 0, 0],
    [1, 0, 2, 0, 0, 0],
    [1, 1, 1, 1, 1, 0],
    [0, 2, 2, 2, 2, 2],
])

three = np.array([
    [0, 1, 1, 0, 0],
    [1, 0, 2, 1, 0],
    [0, 2, 0, 1, 2],
    [0, 1, 1, 0, 2],
    [0, 0, 2, 1, 0],
    [0, 0, 0, 1, 2],
    [1, 0, 0, 1, 2],
    [0, 1, 1, 0, 2],
    [0, 0, 2, 2, 0],
])
four = np.array([
    [1, 0, 0, 0, 0],
    [1, 2, 0, 0, 0],
    [1, 2, 0, 0, 0],
    [1, 2, 1, 0, 0],
    [1, 2, 1, 2, 0],
    [1, 1, 1, 1, 0],
    [0, 2, 1, 2, 2],
    [0, 0, 1, 2, 0],
    [0, 0, 0, 2, 0],
])
five = np.array([
    [1, 1, 1, 1, 0],
    [1, 2, 2, 2, 2],
    [1, 2, 0, 0, 0],
    [1, 1, 1, 0, 0],
    [0, 2, 2, 1, 0],
    [0, 0, 0, 1, 2],
    [1, 0, 0, 1, 2],
    [0, 1, 1, 0, 2],
    [0, 0, 2, 2, 0],
])
six = np.array([
    [0, 0, 1, 1, 0, 0],
    [0, 1, 0, 2, 1, 0],
    [1, 0, 2, 0, 0, 2],
    [1, 2, 1, 1, 0, 0],
    [1, 1, 0, 2, 1, 0],
    [1, 2, 2, 0, 1, 2],
    [1, 2, 0, 0, 1, 2],
    [0, 1, 1, 1, 0, 2],
    [0, 0, 2, 2, 2, 0],
])
seven = np.array([
    [1, 1, 1, 1, 0],
    [0, 2, 2, 1, 2],
    [0, 0, 1, 0, 2],
    [0, 0, 1, 2, 0],
    [0, 1, 0, 2, 0],
    [0, 1, 2, 0, 0],
    [1, 0, 2, 0, 0],
    [1, 2, 0, 0, 0],
    [0, 2, 0, 0, 0],
])
eight = np.array([
    [0, 1, 1, 1, 0, 0],
    [1, 0, 2, 2, 1, 0],
    [1, 2, 0, 0, 1, 2],
    [0, 1, 1, 1, 0, 2],
    [1, 0, 2, 2, 1, 0],
    [1, 2, 0, 0, 1, 2],
    [1, 2, 0, 0, 1, 2],
    [0, 1, 1, 1, 0, 2],
    [0, 0, 2, 2, 2, 0],
])
nine = np.array([
    [0, 1, 1, 1, 0, 0],
    [1, 0, 2, 2, 1, 0],
    [1, 2, 0, 0, 1, 2],
    [0, 1, 0, 0, 1, 2],
    [0, 0, 1, 1, 1, 2],
    [0, 0, 0, 0, 1, 2],
    [0, 0, 0, 0, 1, 2],
    [0, 0, 0, 0, 1, 2],
    [0, 0, 0, 0, 0, 2],
])
zero = np.array([
    [0, 0, 1, 0, 0, 0],
    [0, 1, 0, 1, 0, 0],
    [1, 0, 2, 0, 1, 0],
    [1, 2, 0, 0, 1, 2],
    [1, 2, 0, 0, 1, 2],
    [1, 2, 0, 0, 1, 2],
    [0, 1, 0, 1, 0, 2],
    [0, 0, 1, 0, 2, 0],
    [0, 0, 0, 2, 0, 0],
])

space = np.array([
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
])

k = np.array([
    [1, 0, 0, 0, 0, 0],
    [1, 2, 0, 1, 0, 0],
    [1, 2, 1, 0, 2, 0],
    [1, 1, 0, 2, 0, 0],
    [1, 1, 2, 0, 0, 0],
    [1, 2, 1, 0, 0, 0],
    [1, 2, 0, 1, 0, 0],
    [1, 2, 0, 0, 1, 0],
    [0, 2, 0, 0, 0, 2],
])

m = np.array([
    [1, 0, 0, 0, 0, 1, 0],
    [1, 1, 0, 0, 1, 1, 2],
    [1, 2, 1, 1, 0, 1, 2],
    [1, 2, 0, 2, 2, 1, 2],
    [1, 2, 0, 0, 0, 1, 2],
    [1, 2, 0, 0, 0, 1, 2],
    [1, 2, 0, 0, 0, 1, 2],
    [1, 2, 0, 0, 0, 1, 2],
    [0, 2, 0, 0, 0, 0, 2],
])

b = np.array([
    [1, 1, 1, 1, 0, 0],
    [1, 2, 2, 2, 1, 0],
    [1, 2, 0, 0, 1, 2],
    [1, 1, 1, 1, 0, 2],
    [1, 2, 2, 2, 1, 0],
    [1, 2, 0, 0, 1, 2],
    [1, 2, 0, 0, 1, 2],
    [1, 1, 1, 1, 0, 2],
    [0, 2, 2, 2, 2, 0],
])

q = np.array([
    [0, 1, 1, 1, 0, 0],
    [1, 0, 2, 2, 1, 0],
    [1, 2, 0, 0, 1, 2],
    [1, 2, 0, 0, 1, 2],
    [1, 2, 0, 0, 1, 2],
    [1, 2, 1, 0, 1, 2],
    [1, 2, 0, 1, 0, 2],
    [0, 1, 1, 0, 1, 0],
    [0, 0, 2, 2, 0, 2],
])

t = np.array([
    [1, 1, 1, 1, 1, 0],
    [0, 2, 1, 2, 2, 2],
    [0, 0, 1, 2, 0, 0],
    [0, 0, 1, 2, 0, 0],
    [0, 0, 1, 2, 0, 0],
    [0, 0, 1, 2, 0, 0],
    [0, 0, 1, 2, 0, 0],
    [0, 0, 1, 2, 0, 0],
    [0, 0, 0, 2, 0, 0],
])

digits = {"0": zero, "1": one, "2": two, "3": three, "4": four, "5": five, "6": six, "7": seven, "8": eight, "9": nine}


class DigitEnum:
    background = 0
    foreground = 1
    shadow = 2


def combine_digits(number: str | int, digits: dict[str, np.ndarray]) -> np.ndarray:
    numbers = list(str(number))
    number_arrays = list()
    for n in numbers:
        number_arrays.append(digits[n])
        if n != "1":
            number_arrays.append(space)
    return np.concatenate(number_arrays, axis=1)


def add_color(number_array):
    mask_foreground = number_array == DigitEnum.foreground
    mask_shadow = number_array == DigitEnum.shadow

    yellow = np.array([1, 1, 0])  # for sub K = 1e0
    white = np.array([1, 1, 1])  # for K = 1e3
    green = np.array([0, 255, 128]) / 255  # for M = 1e6
    blue = np.array([102, 152, 255]) / 255  # for B = 1e9
    purple = np.array([189, 50, 243]) / 255  # for T = 1e12
    orange = np.array([255, 129, 0]) / 255  # for Q = 1e15

    black = np.array([0, 0, 0])

    color_array = np.ones(number_array.shape[:2] + (3,))
    color_array[mask_foreground] = yellow
    color_array[mask_shadow] = black
    return color_array


digit = "2184"
number_array = combine_digits(digit, digits)
color_array = add_color(number_array)

plt.imshow(color_array)